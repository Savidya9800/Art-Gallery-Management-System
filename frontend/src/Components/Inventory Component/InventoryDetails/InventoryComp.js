import React, { useEffect, useState } from "react";
import axios from "axios";
import ShopComp from "../Inventory/ShopComp";
import NavigationBar from "../../Nav Component/NavigationBar";
import FooterComp from "../../Nav Component/FooterComp";
import jsPDF from "jspdf";
import "jspdf-autotable"; 
import logo from "../../Nav Component/logo.JPG";

const URL = "http://localhost:5000/inventory";

const fetchHandler = async () => {
  return await axios.get(URL).then((res) => res.data);
};

function InventoryComp() {
  const [inventory, setInventory] = useState([]);

  useEffect(() => {
    fetchHandler().then((data) => {
      console.log("Inventory data:", data.inventory);
      setInventory(data.inventory);
    });
  }, []);

  const generatePDF = () => {
    const doc = new jsPDF();

    doc.setFillColor(167, 143, 81); 
    doc.rect(10, 10, 190, 15, "F"); 

    // Title: Inventory List
    doc.setFontSize(22);
   doc.setTextColor(240, 237, 230);
    doc.text("Inventory List", 14, 20);

    //logo
    const pageWidth = doc.internal.pageSize.getWidth();
    const imgWidth = 25;
    const imgHeight = 20;
    const xPosition = pageWidth - imgWidth - 10;
    doc.addImage(logo,'JPEG', xPosition, 10, imgWidth, imgHeight);

    // Subtitle and Date
    doc.setFontSize(12);
    doc.setFont("helvetica", "normal");
    doc.setTextColor(0, 0, 0);
    doc.text(`Date: ${new Date().toLocaleDateString()}`, 14, 30);

    // Table with Inventory Data
    const inventoryData = inventory.map((item) => [
      item._id || "N/A",
      item.productname || "N/A",
      item.price || "N/A",
      item.itemCount || "N/A",
      new Date(item.date).toLocaleDateString() || "N/A",
    ]);

    doc.autoTable({
      head: [["Product Code", "Product Name", "Price", "Item Count", "Date"]],
      body: inventoryData.length > 0 ? inventoryData : [["No inventory items found"]],
      startY: 40,
      theme: "grid",
      headStyles: {
        fillColor: [165, 143, 81], 
        textColor: [255, 255, 255], 
        fontStyle: "bold", 
      },
    });

    // Footer
    doc.setFontSize(10);
    doc.setTextColor(150);
    doc.text("Generated by Art Gallery Management System", 105, doc.internal.pageSize.height - 10, { align: "center" });

    // Save the PDF
    doc.save("inventory-list.pdf");
  };

  return (
    <div>
      <div className="relative z-10 ">
        <NavigationBar />
      </div>
      <div className="p-6">
        <h1 className="text-2xl font-bold mb-4 text-center">Inventory List</h1>
        <button
          onClick={generatePDF}
          className="bg-[#A78F51] hover:bg-[#8e7b44] text-white font-bold py-2 px-4 rounded mb-4"
        >
          Download PDF
        </button>
        <div className="overflow-x-auto">
          <table id="inventory-table" className="min-w-full bg-white border border-gray-300">
            <thead className="bg-gray-200">
              <tr>
                <th className="px-6 py-3 text-left text-sm font-bold text-gray-700">Product Code</th>
                <th className="px-6 py-3 text-left text-sm font-bold text-gray-700">Product Name</th>
                <th className="px-6 py-3 text-left text-sm font-bold text-gray-700">Price</th>
                <th className="px-6 py-3 text-left text-sm font-bold text-gray-700">Item Count</th>
                <th className="px-6 py-3 text-left text-sm font-bold text-gray-700">Date</th>
                <th className="px-6 py-3 text-left text-sm font-bold text-gray-700">Actions</th>
              </tr>
            </thead>
            <tbody>
              {inventory?.length > 0 ? (
                inventory.map((INVENTORY) => (
                  <ShopComp key={INVENTORY._id} INVENTORY={INVENTORY} />
                ))
              ) : (
                <tr>
                  <td colSpan="6" className="px-6 py-4 text-center">
                    No inventory items found.
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>
      </div>
      <FooterComp />
    </div>
  );
}

export default InventoryComp;
